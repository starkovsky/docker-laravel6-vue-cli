version: '3.7'
services:
  nginx:
    build:
      context: ./config/nginx
      dockerfile: Dockerfile
    container_name: ${APP_NAME}-nginx
    restart: always
    volumes:
      - ${APP_PATH_HOST}:${APP_PATH_CONTAINER}
#      - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
      - "${NGINX_HOST_HTTPS_PORT}:443"
    links:
      - php-fpm
    networks:
      - app-network
    working_dir: ${APP_PATH_CONTAINER}
  php-fpm:
    container_name: ${APP_NAME}-php-fpm
    restart: always
    build:
      context: ./config/php-fpm
      args:
        - INSTALL_PDO_POSTGRESQL=${PHP_FPM_INSTALL_PDO_POSTGRESQL}
      dockerfile: Dockerfile
    volumes:
      - ${APP_PATH_HOST}:${APP_PATH_CONTAINER}
    expose:
      - "9000"
    networks:
      - app-network
  composer:
    image: composer:1.9
    container_name: ${APP_NAME}-composer
    working_dir: ${APP_PATH_CONTAINER}
    environment:
      - HTTP_PROXY=${HTTP_PROXY}
      - HTTPS_PROXY=${HTTPS_PROXY}
    volumes:
      - ${APP_PATH_HOST}:${APP_PATH_CONTAINER}
    command: composer install --ignore-platform-reqs
#  postgres:
#    build:
#      context: ./config/postgres
#      dockerfile: Dockerfile
#    container_name: ${APP_NAME}-postgres
#    restart: always
#    environment:
#      - POSTGRES_DB=${POSTGRES_DB}
#      - POSTGRES_USER=${POSTGRES_USER}
#      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
#    volumes:
#      - ${POSTGRES_DATA}:/var/lib/postgresql/data
#    ports:
#      - "${POSTGRES_PORT}:5432"
#    expose:
#      - 5432
#    networks:
#      - app-network
#  adminer:
#    image: adminer
#    container_name: ${APP_NAME}-adminer
#    restart: always
#    ports:
#      - "6080:8080"
#    networks:
#      - app-network
#  redis:
#    image: redis:5.0
#    container_name: ${APP_NAME}-redis
#    networks:
#      - app-network


networks:
  app-network:
    driver: bridge
